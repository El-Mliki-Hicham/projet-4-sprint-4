{"ast":null,"code":"/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  static defaults = {};\n  static datasetElementType = null;\n  static dataElementType = null;\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  static id = 'bar';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nclass BubbleController extends DatasetController {\n  static id = 'bubble';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  static id = 'doughnut';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  static descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nclass LineController extends DatasetController {\n  static id = 'line';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nclass PolarAreaController extends DatasetController {\n  static id = 'polarArea';\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nclass PieController extends DoughnutController {\n  static id = 'pie';\n  static defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n}\nclass RadarController extends DatasetController {\n  static id = 'radar';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  static overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nclass ScatterController extends DatasetController {\n  static id = 'scatter';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  static overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n  constructor(options) {\n    this.options = options || {};\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n  formats() {\n    return abstract();\n  }\n  parse() {\n    return abstract();\n  }\n  format() {\n    return abstract();\n  }\n  add() {\n    return abstract();\n  }\n  diff() {\n    return abstract();\n  }\n  startOf() {\n    return abstract();\n  }\n  endOf() {\n    return abstract();\n  }\n}\nvar adapters = {\n  _date: DateAdapterBase\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height1 = chartArea.h * weight;\n      const width1 = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n      }\n      stack.start = x;\n      stack.placed += height1;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  static defaults = {};\n  static defaultRoutes = undefined;\n  active = false;\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID1 = Object.keys(position)[0];\n      const value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret1 = this._getYAxisLabelAlignment(tl);\n      textAlign = ret1.textAlign;\n      x = ret1.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = /* #__PURE__ */new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i1 = 0; i1 < local.length; i1++) {\n    const plugin = local[i1];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins,\n    localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n  if (id) {\n    return id;\n  }\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"4.0.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nfunction getDatasetArea(meta) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\nclass Chart {\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n  static register() {\n    registry.add(...arguments);\n    invalidatePlugins();\n  }\n  static unregister() {\n    registry.remove(...arguments);\n    invalidatePlugins();\n  }\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  get registry() {\n    return registry;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {\n      _active,\n      _lastEvent\n    } = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n      this._updateDataset(i1, isFunction(mode) ? mode({\n        datasetIndex: i1\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\nclass ArcElement extends Element {\n  static id = 'arc';\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n}\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  static id = 'line';\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  static descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  static id = 'point';\n  /**\n  * @type {any}\n  */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  /**\n  * @type {any}\n  */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  static id = 'bar';\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n  return (dataset, i) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\nfunction getColorizer(type) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n  return false;\n}\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true\n  },\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n    const {\n      type,\n      options: {\n        elements\n      },\n      data: {\n        datasets\n      }\n    } = chart.config;\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n    const colorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox1 of hitboxes) {\n        if (hitbox1.col !== col) {\n          col = hitbox1.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox1.top = top;\n        hitbox1.left += this.left + padding;\n        hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n        top += hitbox1.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n    let label = tooltipItem.dataset.label || '';\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n  return result;\n}\nclass Tooltip extends Element {\n  static positioners = positioners;\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', {\n        ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\nclass CategoryScale extends Scale {\n  static id = 'category';\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  static id = 'linear';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\nfunction generateTicks(generationOptions, _ref8) {\n  let {\n    min,\n    max\n  } = _ref8;\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  static id = 'logarithmic';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  static id = 'radialLinear';\n  static defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n      callback(label) {\n        return label;\n      },\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  static id = 'time';\n  static defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      callback: false,\n      major: {\n        enabled: false\n      }\n    }\n  };\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets() {\n    let timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  static id = 'timeseries';\n  static defaults = TimeScale.defaults;\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale$1\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","new","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","createDefaultDatasetColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","containsColorsDefinitions","k","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\platform\\index.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\xampp\\htdocs\\Github\\projet-4-sprint-4\\TP-PREMIUM\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}